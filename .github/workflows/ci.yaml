# CI for Product Catalog Service 
# In a real environment it's ok to call the file as ci.yaml because we will work with a specific team

name: product-catalog-ci 

on:
    pull_request:
        branches: 
        - main 

jobs:

    build: # Build and test the application
        runs-on: ubuntu-latest

        steps: 
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Go 1.22
              uses: actions/setup-go@v2
              with:
                go-version: 1.22

            - name: Build
              run: | 
                cd src/product-catalog # Change directory 
                go mod download # Download dependencies
                go build -o product-catalog.exec main.go # Build the application

            - name: unit tests
              run: |
                cd src/product-catalog # Change directory 
                go test ./... # Run unit tests

# The ... in the run: go test src/product-catalog-service/... 
# command is a special pattern in Go that tells the go test command to recursively include all subdirectories.

    code-quality: # Linting and static code analysis
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
            go-version: 1.22

        - name: Run golangci-lint
          uses: golangci/golangci-lint-action@v6
          with:
            version: v1.55.2
            run: golangci-lint run
            working-directory: src/product-catalog


    docker: # Build and push the Docker image
        runs-on: ubuntu-latest
        
        needs: build

        steps: 
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Install Docker
          uses: docker/setup-buildx-action@v3 

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push Docker image
          uses: docker/build-push-action@v6
          with:
            context: src/product-catalog
            file: src/product-catalog/Dockerfile
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/product-catalog:${{ github.run_id }}

      
    updatek8s:
      runs-on: ubuntu-latest
      needs: docker 

      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          token: ${{ secrets.GITTOKEN }}

      - name: Update tag in k8s deployment manifest 
        run: |
          sed -i "s|image: .*|image: ${{ vars.DOCKERHUB_USERNAME }}/product-catalog:${{ github.run_id }}|g" kubernetes/productcatalog/deploy.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "sam.albershtein@gmail.com"
          git config --global user.name "Samuel Albershtein"
          git add kubernetes/productcatalog/deploy.yaml
          git commit -m "[CI]: Update product-catalog-service image tag"
          git push origin HEAD:main

        

        



    

